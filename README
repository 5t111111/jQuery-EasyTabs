jQuery EasyTabs plugin 2.0

Copyright (c) 2010 Steve Schwartz (JangoSteve)

Dual licensed under the MIT and GPL licenses:
  http://www.opensource.org/licenses/mit-license.php
  http://www.gnu.org/licenses/gpl.html

-------------------------------------------------------------------------------------------

VIEW FULL DOCUMENTATION AND DEMOS AT: http://www.alfajango.com/blog/jquery-easytabs-plugin/

VIEW UPDATES AND NEW FEATURES FOR V1.1.2 AT: http://www.alfajango.com/blog/jquery-easytabs-plugin-now-more-flexible-and-usable

VIEW UPDATES AND NEW FEATURES FOR V2.0 AT: http://www.alfajango.com/blog/jquery-easytabs-plugin-v2

DOWNLOAD JQUERY EASYTABS AT: http://plugins.jquery.com/project/easytabs

FORK AND VIEW SOURCECODE AT: http://github.com/JangoSteve/jQuery-EasyTabs

-------------------------------------------------------------------------------------------

CHANGELOG

v2.0
- Changed .easyTabs() to .easytabs() with no capitalization
- Added "easytabs:before" and "easytabs:after" events to easytabs container elements
- Added "easytabs:midTransition" event, which occurs after the first panel is hidden and before the second one is shown
- Added public method "select", called with $(el).easytabs('select', '#tab-two'); to change tabs directly
- Resolved conflicts with using hashchange to enable back button with multiple easytab containers on one page
- Bug fix to exclude links from tab-set which don't have a matching target panel
- Namespaced click binding for tabs. now binds to click.easytabs, so a simple $(el).unbind('easytabs') will undo all bindings.

-------------------------------------------------------------------------------------------

JQuery EasyTabs Plugin


Anyone that has used the tabs functionality included in JQuery UI knows that it's a great tool that allows you to create great-looking themed tabs right out of the box. However, if you have need to customize those tabs significantly for your site, it can be a real pain.

After struggling to create highly customized tabs (custom layout, tabs below the content, etc.), we finally decided to create our own plugin. Rather than styling and arranging your tabs for you, like JQuery UI tabs, this plugin handles only the functionality of the tabs, and leaves the styling to you. With EasyTabs, you control the styling via your own CSS. Let's get started!

UPDATE: This plugin now supports more flexible tab layout, bookmarking, and back- and forward-button support for browsers, and cycling. 
Read more here: http://www.alfajango.com/blog/jquery-easytabs-plugin-now-more-flexible-and-usable

View EasyTabs Plugin on jQuery.com: http://plugins.jquery.com/project/easytabs

## What EasyTabs Does:

- Creates tabs from an unordered list, which link to divs on the page
- Allows complete customization of appearance, layout, and style via CSS
- Supports forward- and back-button in browsers
- Tabs are bookmarkable and SEO-friendly
- Tabs can be cycled at a specified interval

## What EasyTabs Does NOT Do:

- Style your tabs in any way (not through javascript or CSS)
- Load AJAX content, or anything not already on the page

## Documentation

-Installation
-Stylization
-Configuration Options
-Demos

## Installation
### The HTML

Unlike JQuery UI tabs, the HTML markup for your tabs and content can be arranged however you want. At the minimum, you need a container, an unordered list of links for your tabs, and matching divs for your tabbed content.

<div id="tab-container">
  <ul>
    <li><a href="#tab-1-div">Tab 1</a></li>
    <li><a href="#that-other-tab">The Second Tab</a></li>
    <li><a href="#lastly">Tab C</a></li>
  </ul>
  <div id="tab-1-div">
    <h2>Heading 1</h2>
    <p>This is the content of the first tab.</p>
  </div>
    <div id="that-other-tab">
    <h2>Heading 2</h2>
    <p>Stuff from the second tab.</p>
  </div>
  <div id="lastly">
    <h2>Heading 3</h2>
    <p>More stuff from the last tab.</p>
  </div>
</div>

### The Javascript

UPDATE: To enable back- and forward-button support for the users' browsers, be sure to include either the jQuery HashChange plugin (http://benalman.com/projects/jquery-hashchange-plugin/) (recommended) or the Address plugin (http://www.asual.com/jquery/address/docs/) before including the EasyTabs plugin. There is no other configuration required, it will just work!

<script src="/javascripts/jquery.js" type="text/javascript"></script> 
<script src="/javascripts/jquery.hashchange.js" type="text/javascript"></script> 
<script src="/javascripts/jquery.easytabs.js" type="text/javascript"></script>  

<script type="text/javascript"> 
  $(document).ready(function(){ $('#tab-container').easytabs(); });
</script> 

I varied the tab ids and names just to show you how flexible this is. There is no magic going on with this plugin; it's not trying to guess the order of your tabs or what tab is associated with which <div>. Just make the id of the content <div> match the href of the tab link.

### Required Markup

	The only rules you need to follow are these:

- containing <div> with a unique id
- the container <div> contains an unordered list <ul> of links <a>

(UPDATE: As of version 1.1, this is no longer the case. You can now include your tabs anywhere within the container. It can be a <ul>, <ol>, <div>, or anything you want. The default is still a top-level <ul>, so to change it you just specify your selector with the new "tabs" option.)

- the container div also contains content divs (for the tabbed content), each div has a unique id that matches the href property of a link in the unordered list

Other than that, go nuts. The order of the elements does NOT matter. Your <ul> could be before or after the content divs (or even between them). You can put non-tabbed content between the elements. It doesn't matter. Just make sure that the <ul> is a direct descendant of the container <div>.

div#tab-container > ul > a
div#tab-container div#tab-1
div#tab-container div#second-tab

-------------------------------------------------------------------------------------------

For stylization, configuration options, and live demos, see EasyTabs homepage at: http://www.alfajango.com/blog/jquery-easytabs-plugin/